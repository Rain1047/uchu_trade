2025-05-31 21:30:28,465 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:30:28,465 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:30:28,465 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:30:28,465 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:30:28,465 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:30:28,465 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:30:28,469 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:30:28,469 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:30:28,469 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:30:28,471 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:30:28,472 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:30:28,472 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:30:28,472 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:30:28,620 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:30:28,621 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:30:30,984 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:31:12,076 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:12,076 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:12,076 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:12,077 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:12,077 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:12,077 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:12,082 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:12,082 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:12,082 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:12,084 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:31:12,085 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:31:12,085 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:31:12,085 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:31:12,200 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:31:12,200 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:31:15,919 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:15,920 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:15,920 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:15,920 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:15,920 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:15,920 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:15,923 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:15,923 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:15,923 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:15,926 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:31:15,926 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:31:15,926 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:31:15,926 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:31:16,036 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:31:16,036 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:31:19,183 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:31:37,964 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:37,964 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:37,964 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:37,965 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:37,965 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:37,965 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:37,969 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:37,969 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:37,969 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:37,971 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:31:37,972 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:31:37,972 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:31:37,972 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:31:38,087 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:31:38,087 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:31:40,161 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:31:58,045 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:58,045 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:58,045 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:31:58,045 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:58,045 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:58,045 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:31:58,050 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:58,050 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:58,050 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:31:58,053 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:31:58,053 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:31:58,053 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:31:58,053 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:31:58,167 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:31:58,167 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:32:01,988 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:33:08,941 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:08,941 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:08,941 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:08,941 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:08,941 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:08,941 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:08,946 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:08,946 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:08,946 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:08,949 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:33:08,950 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:33:08,950 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:33:08,950 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:33:09,148 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:33:09,148 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:33:12,240 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:33:21,402 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:21,402 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:21,402 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:21,402 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:21,402 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:21,402 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:21,407 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:21,407 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:21,407 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:21,409 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:33:21,410 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:33:21,410 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:33:21,410 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:33:21,530 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:33:21,530 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:33:24,013 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:33:46,629 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:46,629 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:46,629 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:33:46,629 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:46,629 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:46,629 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:33:46,634 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:46,634 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:46,634 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:33:46,636 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:33:46,637 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:33:46,637 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:33:46,637 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:33:46,747 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:33:46,747 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:33:49,295 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:34:25,481 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:25,481 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:25,481 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:25,481 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:25,481 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:25,481 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:25,486 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:25,486 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:25,486 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:25,488 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:34:25,489 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:34:25,489 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:34:25,489 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:34:25,600 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:34:25,600 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:34:28,362 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:34:35,244 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:35,244 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:35,244 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:35,244 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:35,244 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:35,244 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:35,248 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:35,248 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:35,248 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:35,251 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:34:35,251 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:34:35,251 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:34:35,251 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:34:35,360 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:34:35,360 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:34:39,914 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:34:50,373 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:50,374 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:50,374 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:34:50,374 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:50,374 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:50,374 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:34:50,378 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:50,378 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:50,378 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:34:50,380 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:34:50,380 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:34:50,381 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:34:50,381 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:34:50,494 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:34:50,494 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:34:53,211 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:35:20,660 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:35:20,660 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:35:20,660 - backend._utils - INFO - 数据库路径: /Users/rain/PycharmProjects/uchu_trade/backend/trade_db.db
2025-05-31 21:35:20,660 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:35:20,660 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:35:20,660 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:35:20,665 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:35:20,665 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:35:20,665 - backend._utils - INFO - 数据库设置完成
2025-05-31 21:35:20,667 - backend.api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:35:20,668 - backend.api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:35:20,668 - backend.api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:35:20,668 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:35:20,786 - backend.api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:35:20,786 - backend.api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:35:23,305 - backend.backtest_center.universal_backtest_engine - INFO - 初始化通用回测引擎
2025-05-31 21:36:11 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:36:11 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:36:11 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:36:11 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:36:11 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:36:11 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:36:11 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:36:11 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:36:11 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:36:11 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:36:11 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:36:11 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:36:11 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:36:11 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:36:11 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:36:11 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] ('running',)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00032s] ('running',)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:11 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:36:11 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.004267s ago] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.004267s ago] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:36:11.201590', 1)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:36:11.201590', 1)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.007194s ago] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.007194s ago] (1, 1, 0)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('2025-06-01 01:36:11.203489', '2025-05-31 21:36:11.204587', 1)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00010s] ('2025-06-01 01:36:11.203489', '2025-05-31 21:36:11.204587', 1)
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:11 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:36:11 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:36:11 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:36:11 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:36:11 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:36:11 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:36:11 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 21:36:11 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 21:36:11 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 21:36:11 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 21:36:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:36:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:36:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:36:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:36:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:36:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:36:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:36:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:36:18 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:36:18 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:36:18 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:36:18 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:36:18 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:36:18 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:36:18 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:36:18 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:36:18 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:36:18 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:36:18 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:36:18 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:36:18 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:36:18 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:36:18 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:36:18 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:36:18 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:36:18 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [cached since 0.003733s ago] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [cached since 0.003733s ago] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-05-31 21:36:18.837362', 1)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-05-31 21:36:18.837362', 1)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [cached since 0.006687s ago] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [cached since 0.006687s ago] (1, 1, 0)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:36:18.839248', '2025-05-31 21:36:18.840246', 1)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:36:18.839248', '2025-05-31 21:36:18.840246', 1)
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:36:18 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:36:18 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:36:18 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:36:18 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:37:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:37:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:37:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:37:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:37:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:37:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:37:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:37:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:37:35 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:37:35 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:37:35 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:37:35 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:37:35 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:37:35 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:37:35 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:37:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:37:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:37:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:37:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:37:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:37:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:37:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:37:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:37:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('running',)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('running',)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:37:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.003787s ago] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.003787s ago] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:37:35.655984', 1)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:37:35.655984', 1)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.006275s ago] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.006275s ago] (1, 1, 0)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:37:35.657593', '2025-05-31 21:37:35.658475', 1)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:37:35.657593', '2025-05-31 21:37:35.658475', 1)
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:37:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:37:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:37:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:37:51 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:37:51 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:37:51 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:37:51 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:37:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:37:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:37:51 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:37:51 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:37:56 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:37:56 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:37:56 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:37:56 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:37:56 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:37:56 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:37:56 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:37:56 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:37:56 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:37:56 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:37:56 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:37:56 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:37:56 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:37:56 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:37:56 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:37:56 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] ('running',)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] ('running',)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:37:56 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:37:56 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.002774s ago] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.002774s ago] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-05-31 21:37:56.188733', 1)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-05-31 21:37:56.188733', 1)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.005515s ago] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.005515s ago] (1, 1, 0)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-06-01 01:37:56.190568', '2025-05-31 21:37:56.191580', 1)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-06-01 01:37:56.190568', '2025-05-31 21:37:56.191580', 1)
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:37:56 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:37:56 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:37:56 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:37:56 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:37:56 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:37:56 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:37:56 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: argument of type 'StrategyRegistry' is not iterable
2025-05-31 21:37:56 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: argument of type 'StrategyRegistry' is not iterable
2025-05-31 21:38:30 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:38:30 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:38:30 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:38:30 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:38:30 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:38:30 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:38:30 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:38:30 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:38:35 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:38:35 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:38:35 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:38:35 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:38:35 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:38:35 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:38:35 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:38:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:38:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:38:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:38:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:38:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:38:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:38:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:38:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:38:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00034s] ('running',)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00034s] ('running',)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:38:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.003842s ago] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.003842s ago] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-05-31 21:38:35.495910', 1)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00013s] ('2025-05-31 21:38:35.495910', 1)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.006366s ago] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.006366s ago] (1, 1, 0)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:38:35.497561', '2025-05-31 21:38:35.498352', 1)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:38:35.497561', '2025-05-31 21:38:35.498352', 1)
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:38:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:38:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:38:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:38:38 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:38:38 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:38:38 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:38:38 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:38:38 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:38:38 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:38:38 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:38:38 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:38:42 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:38:42 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:38:42 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:38:42 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:38:42 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:38:42 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:38:42 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:38:42 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:38:42 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:38:42 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:38:42 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:38:42 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:38:42 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:38:42 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:38:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:38:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00023s] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:38:42 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:38:42 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [cached since 0.003759s ago] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [cached since 0.003759s ago] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:38:42.298229', 1)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:38:42.298229', 1)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [cached since 0.006747s ago] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [cached since 0.006747s ago] (1, 1, 0)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:38:42.300308', '2025-05-31 21:38:42.301196', 1)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:38:42.300308', '2025-05-31 21:38:42.301196', 1)
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:38:42 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:38:42 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:38:42 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:38:42 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:39:00 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:39:00 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 21:39:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 'BacktestRequest' object has no attribute 'backtest_period'
2025-05-31 21:39:00 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 'BacktestRequest' object has no attribute 'backtest_period'
2025-05-31 21:39:24 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:39:24 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:39:24 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:39:24 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:39:24 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:39:24 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:39:24 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:39:24 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:39:27 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:39:27 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:39:27 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:39:27 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:39:27 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:39:27 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:39:27 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:39:27 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:39:27 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:39:27 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:39:27 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:39:27 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:39:27 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:39:27 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:39:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:39:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] ('running',)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] ('running',)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:39:27 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:39:27 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.004479s ago] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.004479s ago] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:39:27.980770', 1)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00011s] ('2025-05-31 21:39:27.980770', 1)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.007386s ago] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.007386s ago] (1, 1, 0)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:39:27.982733', '2025-05-31 21:39:27.983567', 1)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00009s] ('2025-06-01 01:39:27.982733', '2025-05-31 21:39:27.983567', 1)
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:39:27 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:39:27 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:39:27 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:39:27 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:40:02 - __main__ - INFO - 开始创建数据库表...
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:02 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:02 - __main__ - INFO - 数据库表创建完成
2025-05-31 21:40:02 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:40:02 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:40:02 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:40:02 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:40:03 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:40:03 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:40:03 - __main__ - INFO - 启动FastAPI服务器 - 主机: 127.0.0.1, 端口: 8000
2025-05-31 21:40:08 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:08 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:08 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:40:08 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:40:08 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:40:08 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:40:08 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:40:09 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:40:09 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:40:09 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:40:09 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:40:09 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:40:09 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:40:09 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:40:09 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:40:09 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:40:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:40:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:40:09 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:40:09 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.006303s ago] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.006303s ago] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 21:40:09.487019', 1)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 21:40:09.487019', 1)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.01113s ago] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.01113s ago] (1, 1, 0)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 01:40:09.490699', '2025-05-31 21:40:09.491896', 1)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 01:40:09.490699', '2025-05-31 21:40:09.491896', 1)
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:40:09 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:40:09 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:40:09 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:40:09 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 21:40:46 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:40:46 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 21:40:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 'BacktestRequest' object has no attribute 'backtest_period'
2025-05-31 21:40:46 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 'BacktestRequest' object has no attribute 'backtest_period'
2025-05-31 21:55:58 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:55:58 - main_controller - INFO - 停止策略调度器...
2025-05-31 21:55:58 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:55:58 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 21:55:58 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:55:58 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 21:55:58 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:55:58 - main_controller - INFO - 策略调度器已停止
2025-05-31 21:56:03 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:03 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:03 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 21:56:03 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 21:56:03 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 21:56:03 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 21:56:03 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 21:56:04 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 21:56:04 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 21:56:04 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:56:04 - main_controller - INFO - 开始创建数据库表...
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:56:04 - main_controller - INFO - 数据库表创建完成
2025-05-31 21:56:04 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:56:04 - main_controller - INFO - 启动策略调度器...
2025-05-31 21:56:04 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:56:04 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 21:56:04 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:56:04 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] ('running',)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] ('running',)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00053s] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00053s] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 21:56:04 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:56:04 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [cached since 0.006874s ago] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [cached since 0.006874s ago] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 21:56:04.445354', 1)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 21:56:04.445354', 1)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [cached since 0.01037s ago] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [cached since 0.01037s ago] (1, 1, 0)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 01:56:04.447579', '2025-05-31 21:56:04.448907', 1)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 01:56:04.447579', '2025-05-31 21:56:04.448907', 1)
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 21:56:04 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:56:04 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 21:56:04 - main_controller - INFO - 策略调度器启动完成
2025-05-31 21:56:04 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:32:34 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:32:34 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:32:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: cannot import name 'get_db' from 'backend.database' (/Users/rain/PycharmProjects/uchu_trade/backend/database.py)
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: cannot import name 'get_db' from 'backend.database' (/Users/rain/PycharmProjects/uchu_trade/backend/database.py)
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: cannot import name 'get_db' from 'backend.database' (/Users/rain/PycharmProjects/uchu_trade/backend/database.py)
2025-05-31 22:32:34 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: cannot import name 'get_db' from 'backend.database' (/Users/rain/PycharmProjects/uchu_trade/backend/database.py)
2025-05-31 22:33:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:33:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:33:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:33:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:33:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:33:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:33:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:33:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:33:22 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:22 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:33:22 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:33:22 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:33:22 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:33:22 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:33:23 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:33:23 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:33:23 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:33:23 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:33:23 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:33:23 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:33:23 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:33:23 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:33:23 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:33:23 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:33:23 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:33:23 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:33:23 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.006428s ago] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.006428s ago] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:33:23.484596', 1)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:33:23.484596', 1)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.01095s ago] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.01095s ago] (1, 1, 0)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:33:23.487936', '2025-05-31 22:33:23.489091', 1)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:33:23.487936', '2025-05-31 22:33:23.489091', 1)
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:33:23 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:33:23 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:33:23 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:33:23 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:34:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:34:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:34:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:34:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:34:42 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:34:42 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:34:42 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:34:42 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:34:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:34:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:34:42 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:34:42 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:34:48 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:48 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:48 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:34:48 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:34:48 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:34:48 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:34:48 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:34:53 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:53 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:34:53 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:34:53 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:34:53 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:34:53 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:34:54 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:34:54 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:34:54 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:34:54 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:34:54 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:34:54 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:34:54 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:34:54 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:34:54 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:34:54 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:34:54 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00061s] ('running',)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00061s] ('running',)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:34:54 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:34:54 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.006104s ago] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.006104s ago] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:34:54.278035', 1)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:34:54.278035', 1)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.009445s ago] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.009445s ago] (1, 1, 0)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] ('2025-06-01 02:34:54.280404', '2025-05-31 22:34:54.281694', 1)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00024s] ('2025-06-01 02:34:54.280404', '2025-05-31 22:34:54.281694', 1)
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:34:54 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:34:54 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:34:54 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:34:54 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:35:01 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:35:01 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:35:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:30 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:35:30 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:35:30 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:35:30 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:35:30 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:35:30 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:35:30 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:35:30 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:35:36 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:36 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:36 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:35:36 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:35:36 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:35:36 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:35:36 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:35:37 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:35:37 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:35:37 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:35:37 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:35:37 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:35:37 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:35:37 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:35:37 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:35:37 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:35:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:35:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('running',)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00037s] ('running',)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:37 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:35:37 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.005122s ago] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.005122s ago] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ('2025-05-31 22:35:37.093273', 1)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ('2025-05-31 22:35:37.093273', 1)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.00861s ago] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.00861s ago] (1, 1, 0)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:35:37.095750', '2025-05-31 22:35:37.096836', 1)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:35:37.095750', '2025-05-31 22:35:37.096836', 1)
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:37 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:35:37 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:35:37 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:35:37 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:35:39 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:35:39 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:35:39 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:35:39 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:35:39 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:35:39 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:35:39 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:35:39 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:35:44 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:44 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:44 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:35:44 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:35:44 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:35:44 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:35:44 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:35:45 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:35:45 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:35:45 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:35:45 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:35:45 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:35:45 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:35:45 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:35:45 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:35:45 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:35:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:35:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00056s] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00056s] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:35:45 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:35:45 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.00463s ago] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.00463s ago] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-05-31 22:35:45.678584', 1)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-05-31 22:35:45.678584', 1)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.008294s ago] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.008294s ago] (1, 1, 0)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:35:45.681202', '2025-05-31 22:35:45.682306', 1)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:35:45.681202', '2025-05-31 22:35:45.682306', 1)
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:35:45 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:35:45 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:35:45 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:35:45 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:35:58 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:35:58 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:35:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:35:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:36:50 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:36:50 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:36:50 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:36:50 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:36:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:36:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:36:50 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:36:50 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:36:58 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:36:58 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:36:58 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:36:58 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:36:58 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:36:58 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:36:58 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:36:58 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:36:58 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:36:58 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:36:58 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:36:58 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:36:58 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:36:58 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:36:58 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:36:58 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:36:58 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:36:58 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [cached since 0.005779s ago] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [cached since 0.005779s ago] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:36:58.784504', 1)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:36:58.784504', 1)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [cached since 0.008907s ago] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [cached since 0.008907s ago] (1, 1, 0)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:36:58.786686', '2025-05-31 22:36:58.787745', 1)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:36:58.786686', '2025-05-31 22:36:58.787745', 1)
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:36:58 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:36:58 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:36:58 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:36:58 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:37:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:37:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:37:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:37:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:37:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:37:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:37:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:37:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:37:11 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:37:11 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:37:11 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:37:11 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:37:11 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:37:11 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:37:11 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:37:11 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:37:11 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:37:11 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:37:11 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:37:11 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:37:11 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:37:11 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:37:11 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:37:11 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00060s] ('running',)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00060s] ('running',)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:37:11 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:37:11 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.005119s ago] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.005119s ago] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:37:11.737278', 1)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:37:11.737278', 1)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.008313s ago] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [cached since 0.008313s ago] (1, 1, 0)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 02:37:11.739455', '2025-05-31 22:37:11.740582', 1)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 02:37:11.739455', '2025-05-31 22:37:11.740582', 1)
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:37:11 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:37:11 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:37:11 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:37:11 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:37:22 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:37:22 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:37:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:37:22 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: 'generator' object has no attribute 'connect'
2025-05-31 22:38:34 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:38:34 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:38:34 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:38:34 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:38:34 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:38:34 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:38:34 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:38:34 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:38:40 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:40 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:38:40 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:38:40 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:38:40 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:38:40 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:38:41 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:38:41 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:38:41 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:38:41 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:38:41 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:38:41 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:38:41 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:38:41 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:38:41 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:38:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:38:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:41 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:38:41 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [cached since 0.006565s ago] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [cached since 0.006565s ago] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:38:41.498046', 1)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:38:41.498046', 1)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [cached since 0.01129s ago] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [cached since 0.01129s ago] (1, 1, 0)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 02:38:41.501412', '2025-05-31 22:38:41.503199', 1)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 02:38:41.501412', '2025-05-31 22:38:41.503199', 1)
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:41 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:38:41 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:38:41 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:38:41 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:38:45 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:38:45 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:38:45 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:38:45 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:38:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:38:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:38:45 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:38:45 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:38:51 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:38:51 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:38:51 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:38:51 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:38:51 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:38:51 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:38:51 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:38:51 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:38:51 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:38:51 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:38:51 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:38:51 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:38:51 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:38:51 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:38:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:38:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:38:51 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:38:51 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.004211s ago] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.004211s ago] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:38:51.939104', 1)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:38:51.939104', 1)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.007376s ago] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.007376s ago] (1, 1, 0)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:38:51.941206', '2025-05-31 22:38:51.942366', 1)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:38:51.941206', '2025-05-31 22:38:51.942366', 1)
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:38:51 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:38:51 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:38:51 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:38:51 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:39:51 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:39:51 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:39:51 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:39:51 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:39:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:39:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:39:51 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:39:51 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:39:56 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:56 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:56 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:39:56 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:39:56 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:39:56 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:39:56 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:39:57 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:39:57 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:39:57 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:39:57 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:39:57 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:39:57 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:39:57 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:39:57 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:39:57 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:39:57 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:39:57 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] ('running',)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] ('running',)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00079s] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00079s] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:39:57 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:39:57 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.007041s ago] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.007041s ago] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:39:57.528614', 1)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:39:57.528614', 1)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.01067s ago] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.01067s ago] (1, 1, 0)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 02:39:57.531225', '2025-05-31 22:39:57.532158', 1)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 02:39:57.531225', '2025-05-31 22:39:57.532158', 1)
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:39:57 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:39:57 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:39:57 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:39:57 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:04 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:04 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:04 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:04 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:04 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:04 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:04 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:04 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:11 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:11 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:40:11 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:40:11 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:40:11 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:40:11 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:40:12 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:40:12 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:40:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] ('running',)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] ('running',)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00102s] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00102s] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.004967s ago] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.004967s ago] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:40:12.172027', 1)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 22:40:12.172027', 1)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.008349s ago] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.008349s ago] (1, 1, 0)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:40:12.174333', '2025-05-31 22:40:12.175459', 1)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:40:12.174333', '2025-05-31 22:40:12.175459', 1)
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:20 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:20 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:20 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:40:20 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:40:20 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:40:20 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:40:20 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:40:22 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:40:22 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:40:22 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:22 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:22 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:22 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:22 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:22 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:22 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:22 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:22 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00375s] ('running',)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00375s] ('running',)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00798s] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00798s] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:22 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:22 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.03484s ago] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.03484s ago] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('2025-05-31 22:40:22.927420', 1)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('2025-05-31 22:40:22.927420', 1)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.06755s ago] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.06755s ago] (1, 1, 0)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('2025-06-01 02:40:22.944325', '2025-05-31 22:40:22.958988', 1)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00026s] ('2025-06-01 02:40:22.944325', '2025-05-31 22:40:22.958988', 1)
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:22 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:22 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:22 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:22 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:26 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:26 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:26 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:26 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:26 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:26 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:26 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:26 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:31 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:31 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:31 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:40:31 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:40:31 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:40:31 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:40:31 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:40:32 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:40:32 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:40:32 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:32 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:32 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:32 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:32 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:32 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:32 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:32 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:32 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00094s] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00094s] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:32 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:32 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.006148s ago] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.006148s ago] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:40:32.554071', 1)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:40:32.554071', 1)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.01164s ago] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.01164s ago] (1, 1, 0)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ('2025-06-01 02:40:32.558014', '2025-05-31 22:40:32.559658', 1)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00020s] ('2025-06-01 02:40:32.558014', '2025-05-31 22:40:32.559658', 1)
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:32 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:32 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:32 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:32 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:42 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:42 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:40:42 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:42 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:40:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:42 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:40:42 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:42 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:40:49 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:49 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:40:49 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:40:49 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:40:49 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:40:49 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:40:50 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:40:50 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:40:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:40:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:40:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:40:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:40:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.004702s ago] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.004702s ago] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:40:50.419466', 1)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:40:50.419466', 1)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.008003s ago] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.008003s ago] (1, 1, 0)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:40:50.421725', '2025-05-31 22:40:50.422697', 1)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:40:50.421725', '2025-05-31 22:40:50.422697', 1)
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:40:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:40:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:40:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:41:00 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:41:00 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:41:00 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:41:00 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:41:00 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:41:00 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:41:00 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:41:00 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:41:06 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:41:06 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:41:06 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:41:06 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:41:06 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:41:06 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:41:06 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:41:06 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:41:06 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:41:06 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:41:06 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:41:06 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:41:06 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:41:06 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:41:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:41:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('running',)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('running',)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:41:06 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:41:06 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.006009s ago] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.006009s ago] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:41:06.732472', 1)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:41:06.732472', 1)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.009251s ago] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.009251s ago] (1, 1, 0)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-06-01 02:41:06.734735', '2025-05-31 22:41:06.735782', 1)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-06-01 02:41:06.734735', '2025-05-31 22:41:06.735782', 1)
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:41:06 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:41:06 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:41:06 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:41:06 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:41:30 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:41:30 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:41:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:41:30.122797', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:41:30.122797', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:41:30.122797', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:41:30 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:41:30.122797', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:42:41 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:42:41.390153', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:42:41.390153', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:42:41.390153', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:42:41 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:42:41.390153', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:44:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:44:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:44:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:44:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:44:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:44:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:44:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:44:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:44:11 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:11 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:44:11 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:44:11 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:44:11 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:44:11 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:44:12 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:44:12 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:44:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:44:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:44:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:44:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:44:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:44:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:44:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:44:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:44:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00064s] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00064s] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:44:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:44:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.006015s ago] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.006015s ago] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:44:12.199742', 1)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 22:44:12.199742', 1)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.01082s ago] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.01082s ago] (1, 1, 0)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('2025-06-01 02:44:12.202349', '2025-05-31 22:44:12.204806', 1)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('2025-06-01 02:44:12.202349', '2025-05-31 22:44:12.204806', 1)
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:44:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:44:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:44:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:44:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:44:33 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:44:33 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:44:33 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:44:33.979778', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:44:33.979778', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:44:33.979778', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:44:33 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:44:33.979778', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:48:48 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:48:48 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:48:48 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:48:48 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:48:48 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:48:48 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:48:48 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:48:48 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:48:53 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:53 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:48:53 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:48:53 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:48:53 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:48:53 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:48:54 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:48:54 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:48:54 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:48:54 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:48:54 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:48:54 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:48:54 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:48:54 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:48:54 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:48:54 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:48:54 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] ('running',)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00057s] ('running',)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:48:54 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:48:54 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.005436s ago] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.005436s ago] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00028s] ('2025-05-31 22:48:54.436503', 1)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00028s] ('2025-05-31 22:48:54.436503', 1)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.009572s ago] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [cached since 0.009572s ago] (1, 1, 0)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] ('2025-06-01 02:48:54.439414', '2025-05-31 22:48:54.440624', 1)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] ('2025-06-01 02:48:54.439414', '2025-05-31 22:48:54.440624', 1)
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:48:54 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:48:54 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:48:54 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:48:54 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - INFO - Received fast trade request: pageSize=10 pageNum=1 ccy='' type='' side='' status='' exec_source='' begin_time='' end_time=''
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - ERROR - Error processing fast request: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):
  File "/Users/rain/PycharmProjects/uchu_trade/backend/controller_center/record/record_controller.py", line 75, in list_spot_record_fast
    page_result = RecordService.list_config_execute_records(request)
  File "/Users/rain/PycharmProjects/uchu_trade/backend/controller_center/record/record_service.py", line 11, in list_config_execute_records
    return SpotAlgoOrderRecord.list_spot_algo_order_record_by_conditions(config_execute_history_request)
  File "/Users/rain/PycharmProjects/uchu_trade/backend/data_object_center/spot_algo_order_record.py", line 403, in list_spot_algo_order_record_by_conditions
    total = session.query(cls).filter(*filters).count()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 3147, in count
    self._legacy_from_self(col).enable_eagerloads(False).scalar()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2836, in scalar
    ret = self.one()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2809, in one
    return self._iter().one()  # type: ignore
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 990, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
2025-05-31 22:49:52 - backend.controller_center.record.record_controller - ERROR - Error processing fast request: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):
  File "/Users/rain/PycharmProjects/uchu_trade/backend/controller_center/record/record_controller.py", line 75, in list_spot_record_fast
    page_result = RecordService.list_config_execute_records(request)
  File "/Users/rain/PycharmProjects/uchu_trade/backend/controller_center/record/record_service.py", line 11, in list_config_execute_records
    return SpotAlgoOrderRecord.list_spot_algo_order_record_by_conditions(config_execute_history_request)
  File "/Users/rain/PycharmProjects/uchu_trade/backend/data_object_center/spot_algo_order_record.py", line 403, in list_spot_algo_order_record_by_conditions
    total = session.query(cls).filter(*filters).count()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 3147, in count
    self._legacy_from_self(col).enable_eagerloads(False).scalar()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2836, in scalar
    ret = self.one()
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2809, in one
    return self._iter().one()  # type: ignore
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2858, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2110, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
  File "<string>", line 2, in _connection_for_bind
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
  File "/Users/rain/anaconda3/envs/okx-trading/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 990, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - 初始化OKXBalanceService
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - 初始化OKXBalanceService
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - OKXBalanceService初始化完成
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - OKXBalanceService初始化完成
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - 开始获取账户余额列表
2025-05-31 22:49:53 - backend.service_center.okx_service.okx_balance_service - INFO - 开始获取账户余额列表
2025-05-31 22:49:53 - backend.api_center.okx_api.account_api - INFO - 开始获取账户余额
2025-05-31 22:49:53 - backend.api_center.okx_api.account_api - INFO - 开始获取账户余额
2025-05-31 22:49:53 - backend.controller_center.strategy.strategy_controller - INFO - 策略列表: {'success': True, 'data': {'items': [{'id': 11, 'name': 'SOL双布林带', 'trade_pair': 'SOL-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 97, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-23'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2025-05-24 13:49:00', 'gmt_modified': '2025-05-31 10:44:03'}, {'id': 8, 'name': 'BTC双布林带策略', 'trade_pair': 'BTC-USDT', 'time_frame': '4H', 'side': 'long', 'entry_per_trans': 1000, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_diff_increasing_filter_strategy,sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2', 'time': '12-23'}, 'stop_loss_config': {'trailing_stop': '12'}, 'switch': 1, 'gmt_create': '2024-11-12 22:18:05', 'gmt_modified': '2025-01-04 21:11:27'}, {'id': 2, 'name': 'ETH双布林带策略', 'trade_pair': 'ETH-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 0, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-24'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2024-03-03 14:36:06', 'gmt_modified': '2025-05-24 13:35:42'}], 'total_count': 3, 'page_size': 10, 'page_num': 1}}
2025-05-31 22:49:53 - backend.controller_center.strategy.strategy_controller - INFO - 策略列表: {'success': True, 'data': {'items': [{'id': 11, 'name': 'SOL双布林带', 'trade_pair': 'SOL-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 97, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-23'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2025-05-24 13:49:00', 'gmt_modified': '2025-05-31 10:44:03'}, {'id': 8, 'name': 'BTC双布林带策略', 'trade_pair': 'BTC-USDT', 'time_frame': '4H', 'side': 'long', 'entry_per_trans': 1000, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_diff_increasing_filter_strategy,sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2', 'time': '12-23'}, 'stop_loss_config': {'trailing_stop': '12'}, 'switch': 1, 'gmt_create': '2024-11-12 22:18:05', 'gmt_modified': '2025-01-04 21:11:27'}, {'id': 2, 'name': 'ETH双布林带策略', 'trade_pair': 'ETH-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 0, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-24'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2024-03-03 14:36:06', 'gmt_modified': '2025-05-24 13:35:42'}], 'total_count': 3, 'page_size': 10, 'page_num': 1}}
2025-05-31 22:49:53 - backend.controller_center.strategy.strategy_controller - INFO - 策略列表: {'success': True, 'data': {'items': [{'id': 11, 'name': 'SOL双布林带', 'trade_pair': 'SOL-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 97, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-23'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2025-05-24 13:49:00', 'gmt_modified': '2025-05-31 10:44:03'}, {'id': 8, 'name': 'BTC双布林带策略', 'trade_pair': 'BTC-USDT', 'time_frame': '4H', 'side': 'long', 'entry_per_trans': 1000, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_diff_increasing_filter_strategy,sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2', 'time': '12-23'}, 'stop_loss_config': {'trailing_stop': '12'}, 'switch': 1, 'gmt_create': '2024-11-12 22:18:05', 'gmt_modified': '2025-01-04 21:11:27'}, {'id': 2, 'name': 'ETH双布林带策略', 'trade_pair': 'ETH-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 0, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-24'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2024-03-03 14:36:06', 'gmt_modified': '2025-05-24 13:35:42'}], 'total_count': 3, 'page_size': 10, 'page_num': 1}}
2025-05-31 22:49:53 - backend.controller_center.strategy.strategy_controller - INFO - 策略列表: {'success': True, 'data': {'items': [{'id': 11, 'name': 'SOL双布林带', 'trade_pair': 'SOL-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 97, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-23'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2025-05-24 13:49:00', 'gmt_modified': '2025-05-31 10:44:03'}, {'id': 8, 'name': 'BTC双布林带策略', 'trade_pair': 'BTC-USDT', 'time_frame': '4H', 'side': 'long', 'entry_per_trans': 1000, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_diff_increasing_filter_strategy,sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2', 'time': '12-23'}, 'stop_loss_config': {'trailing_stop': '12'}, 'switch': 1, 'gmt_create': '2024-11-12 22:18:05', 'gmt_modified': '2025-01-04 21:11:27'}, {'id': 2, 'name': 'ETH双布林带策略', 'trade_pair': 'ETH-USDT', 'time_frame': '4h', 'side': 'long', 'entry_per_trans': 0, 'loss_per_trans': 200, 'entry_st_code': 'dbb_entry_long_strategy', 'exit_st_code': 'dbb_exit_long_strategy', 'filter_st_code': 'sma_perfect_order_filter_strategy', 'schedule_config': {'date': '1,2,3,4,5,6,7', 'time': '0-24'}, 'stop_loss_config': {}, 'switch': 1, 'gmt_create': '2024-03-03 14:36:06', 'gmt_modified': '2025-05-24 13:35:42'}], 'total_count': 3, 'page_size': 10, 'page_num': 1}}
2025-05-31 22:49:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/account/balance "HTTP/2 401 Unauthorized"
2025-05-31 22:49:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/account/balance "HTTP/2 401 Unauthorized"
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 开始获取账户余额列表
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 开始获取账户余额列表
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 开始获取账户余额
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 开始获取账户余额
2025-05-31 22:49:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/account/balance "HTTP/2 401 Unauthorized"
2025-05-31 22:49:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/account/balance "HTTP/2 401 Unauthorized"
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.api_center.okx_api.account_api - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - INFO - 获取账户余额响应: {'msg': "Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.", 'code': '50110'}
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:55 - backend.service_center.okx_service.okx_balance_service - ERROR - 获取账户余额失败 - 错误码: 50110, 错误信息: Your IP 192.9.234.246 is not included in your API key's 7c6dda50-2591-4b3a-a3bd-94d2e6101926 IP whitelist.
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:56 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.01419s] ()
2025-05-31 22:49:56 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - [generated in 0.01419s] ()
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:56 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:56 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.03043s ago] ()
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - [cached since 0.03043s ago] ()
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:56 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - [cached since 1.852s ago] ()
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - [cached since 1.852s ago] ()
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - [cached since 1.86s ago] ()
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - [cached since 1.86s ago] ()
2025-05-31 22:49:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:58 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - [cached since 3.55s ago] ()
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - [cached since 3.55s ago] ()
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - [cached since 3.576s ago] ()
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - [cached since 3.576s ago] ()
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:49:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:50:20 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:50:20 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:50:20 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:50:20 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:50:20 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:50:20 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:50:20 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:50:20 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:50:28 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:50:28 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:50:28 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:50:28 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:50:28 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:50:28 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:50:28 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:50:28 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:50:28 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:50:28 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:50:28 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:50:28 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:50:28 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:50:28 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:50:28 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:50:28 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00060s] ('running',)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00060s] ('running',)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00036s] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00036s] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:50:28 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:50:28 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [cached since 0.006067s ago] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [cached since 0.006067s ago] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:50:28.713551', 1)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:50:28.713551', 1)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [cached since 0.009182s ago] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [cached since 0.009182s ago] (1, 1, 0)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:50:28.715610', '2025-05-31 22:50:28.716723', 1)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:50:28.715610', '2025-05-31 22:50:28.716723', 1)
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:50:28 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:50:28 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:50:28 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:50:28 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:50:31 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:50:31 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:50:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:50:31 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:50:31 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:50:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:50:31.111862', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:57 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:51:57 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:51:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:51:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:51:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:51:58 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:58 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:51:58 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:51:58.162352', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:52:21 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:52:21 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.data_object_center.enhanced_backtest_record - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:52:21 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测请求处理失败: 500: 创建回测记录失败: (sqlite3.OperationalError) no such table: enhanced_backtest_records
[SQL: INSERT INTO enhanced_backtest_records (entry_strategy, exit_strategy, filter_strategy, symbols, timeframe, initial_cash, risk_percent, commission, start_date, end_date, status, start_time, end_time, error_message, description) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('dbb_entry_long_strategy', 'dbb_exit_long_strategy', 'sma_perfect_order_filter_strategy', '["BTC", "ETH", "SOL"]', '4h', 100000.0, 2.0, 0.001, None, None, 'running', '2025-05-31 22:52:21.110163', None, None, '前端创建的回测')]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-31 22:54:44 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:54:44 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:54:44 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:54:44 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:54:44 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:54:44 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:54:44 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:54:44 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:54:51 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:54:51 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:54:51 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:54:51 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:54:51 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:54:51 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:54:51 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:54:51 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:54:51 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:54:51 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:54:51 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:54:51 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:54:51 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:54:51 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:54:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:54:51 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:54:51 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:54:51 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.005625s ago] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.005625s ago] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:54:51.816374', 1)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:54:51.816374', 1)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.008739s ago] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [cached since 0.008739s ago] (1, 1, 0)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:54:51.818509', '2025-05-31 22:54:51.819476', 1)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 02:54:51.818509', '2025-05-31 22:54:51.819476', 1)
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:54:51 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:54:51 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:54:51 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:54:51 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:54:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:54:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:54:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:54:59 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:55:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:55:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - [generated in 0.00081s] ()
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - [generated in 0.00081s] ()
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:55:00 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - [cached since 0.009169s ago] ()
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - [cached since 0.009169s ago] ()
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:00 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:16 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:55:16 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:55:16 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:55:16 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:55:16 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:55:16 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:55:16 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:55:16 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:55:22 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:22 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:55:22 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:55:22 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:55:22 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:55:22 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:55:23 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:55:23 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:55:23 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:55:23 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:55:23 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:55:23 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:55:23 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:55:23 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:55:23 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:55:23 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:55:23 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:23 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:55:23 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.004651s ago] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.004651s ago] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:55:23.141549', 1)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:55:23.141549', 1)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.00786s ago] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [cached since 0.00786s ago] (1, 1, 0)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:55:23.143645', '2025-05-31 22:55:23.144798', 1)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 02:55:23.143645', '2025-05-31 22:55:23.144798', 1)
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:23 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:55:23 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:55:23 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:55:23 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:55:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:55:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:55:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:55:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:55:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:55:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:55:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:55:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:55:37 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:37 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:55:37 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:55:37 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:55:37 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:55:37 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:55:38 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:55:38 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:55:38 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:55:38 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:55:38 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:55:38 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:55:38 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:55:38 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:55:38 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:55:38 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:55:38 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:55:38 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:55:38 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [cached since 0.004447s ago] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [cached since 0.004447s ago] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:55:38.235420', 1)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 22:55:38.235420', 1)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [cached since 0.007782s ago] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [cached since 0.007782s ago] (1, 1, 0)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('2025-06-01 02:55:38.237834', '2025-05-31 22:55:38.238877', 1)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('2025-06-01 02:55:38.237834', '2025-05-31 22:55:38.238877', 1)
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:55:38 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:55:38 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:55:38 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:55:38 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:56:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:56:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:56:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:56:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:56:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:56:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:56:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:56:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:56:36 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:36 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:36 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:56:36 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:56:36 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:56:36 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:56:36 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:56:37 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:56:37 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:56:37 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:56:37 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:56:37 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:56:37 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:56:37 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:56:37 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:56:37 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:56:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:56:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:37 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:56:37 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.008121s ago] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.008121s ago] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:56:37.568892', 1)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 22:56:37.568892', 1)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.01189s ago] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [cached since 0.01189s ago] (1, 1, 0)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 02:56:37.571357', '2025-05-31 22:56:37.572575', 1)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 02:56:37.571357', '2025-05-31 22:56:37.572575', 1)
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:56:37 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:56:37 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:56:37 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:56:37 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:56:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00610s] ()
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00610s] ()
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.02194s ago] ()
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.02194s ago] ()
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:56:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:57:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 1
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 1
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 1
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 1
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:57:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - ERROR - 回测执行出错: 'EnhancedBacktestRunner' object has no attribute 'engine'
2025-05-31 22:57:12 - backend.backtest_center.enhanced_backtest_runner - ERROR - 回测执行出错: 'EnhancedBacktestRunner' object has no attribute 'engine'
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 1 失败
2025-05-31 22:57:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 1 失败
2025-05-31 22:57:29 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:29 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:29 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:29 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:57:40 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 22:58:09 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:58:09 - main_controller - INFO - 停止策略调度器...
2025-05-31 22:58:09 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:58:09 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 22:58:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:58:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 22:58:09 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:58:09 - main_controller - INFO - 策略调度器已停止
2025-05-31 22:58:14 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:14 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 22:58:14 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 22:58:14 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 22:58:14 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 22:58:14 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 22:58:15 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 22:58:15 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 22:58:15 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:58:15 - main_controller - INFO - 开始创建数据库表...
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:58:15 - main_controller - INFO - 数据库表创建完成
2025-05-31 22:58:15 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:58:15 - main_controller - INFO - 启动策略调度器...
2025-05-31 22:58:15 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:58:15 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 22:58:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:58:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 22:58:15 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:58:15 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [cached since 0.00572s ago] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [cached since 0.00572s ago] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:58:15.339710', 1)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 22:58:15.339710', 1)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [cached since 0.009259s ago] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [cached since 0.009259s ago] (1, 1, 0)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 02:58:15.342292', '2025-05-31 22:58:15.343311', 1)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 02:58:15.342292', '2025-05-31 22:58:15.343311', 1)
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 22:58:15 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:58:15 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 22:58:15 - main_controller - INFO - 策略调度器启动完成
2025-05-31 22:58:15 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:01:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:01:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:01:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:01:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:01:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:01:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:01:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:01:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:01:11 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:11 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:11 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:01:11 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:01:11 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:01:11 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:01:11 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:01:12 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:01:12 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:01:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:01:12 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:01:12 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:01:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:01:12 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:01:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:01:12 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:01:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:01:12 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:01:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:01:12 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.007406s ago] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.007406s ago] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('2025-05-31 23:01:12.136533', 1)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('2025-05-31 23:01:12.136533', 1)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.01707s ago] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [cached since 0.01707s ago] (1, 1, 0)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:01:12.144058', '2025-05-31 23:01:12.145284', 1)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:01:12.144058', '2025-05-31 23:01:12.145284', 1)
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:01:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:01:12 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:01:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:01:12 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:01:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:01:12 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 2
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 2
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 2
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 2
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - BTC: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - BTC: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - ETH: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - ETH: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - SOL: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - WARNING - SOL: 数据不足
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:01:12 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:01:12 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 2 失败
2025-05-31 23:01:12 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 2 失败
2025-05-31 23:04:10 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:04:10 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:04:10 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:04:10 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:04:10 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:04:10 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:04:10 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:04:10 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:04:16 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:16 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:16 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:04:16 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:04:16 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:04:16 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:04:16 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:04:17 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:04:17 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:04:17 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:04:17 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:04:17 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:04:17 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:04:17 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:04:17 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:04:17 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:04:17 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:04:17 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00063s] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00063s] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:17 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:04:17 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [cached since 0.006209s ago] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [cached since 0.006209s ago] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:04:17.397066', 1)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:04:17.397066', 1)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [cached since 0.009587s ago] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [cached since 0.009587s ago] (1, 1, 0)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:04:17.399340', '2025-05-31 23:04:17.400350', 1)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:04:17.399340', '2025-05-31 23:04:17.400350', 1)
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:17 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:04:17 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:04:17 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:04:17 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:04:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:04:31 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:04:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:04:31 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:04:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:04:31 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:04:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:04:31 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:04:40 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:04:40 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:04:40 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:04:40 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:04:40 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:04:40 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:04:40 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:04:40 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:04:40 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:04:40 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:04:40 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:04:40 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:04:40 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:04:40 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:04:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:04:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] ('running',)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] ('running',)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:04:40 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:04:40 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [cached since 0.006506s ago] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [cached since 0.006506s ago] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:04:40.991875', 1)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:04:40.991875', 1)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [cached since 0.01029s ago] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [cached since 0.01029s ago] (1, 1, 0)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:04:40.994336', '2025-05-31 23:04:40.995635', 1)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:04:40.994336', '2025-05-31 23:04:40.995635', 1)
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:04:40 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:04:40 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:04:40 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:04:40 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:05:16 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:05:16 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:05:16 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:05:16 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:05:16 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:05:16 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:05:16 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:16 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:16 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:16 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:24 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:24 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:24 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:24 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:24 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:24 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:24 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:24 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:25 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:25 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:25 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:25 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:25 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:25 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:25 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:25 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:25 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:25 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:05:25 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:05:25 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:25 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:29 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:29 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:29 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:29 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:29 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:29 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:29 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:29 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:30 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:30 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:30 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:30 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:30 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:30 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:30 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:30 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:30 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:05:30 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:05:30 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:30 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:33 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:33 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:33 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:33 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:33 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:33 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:33 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:05:33 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:05:34 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:34 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:34 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:05:34 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:05:34 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:34 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:34 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:34 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 3
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 3
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 3
2025-05-31 23:05:34 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 3
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:05:34 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:05:34 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:34 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:34 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:34 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:37 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:37 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:37 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:37 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:37 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:37 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:37 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:37 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:38 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:38 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:38 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:38 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:38 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:38 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:38 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:38 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:38 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:38 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:05:38 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:05:38 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:38 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:40 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:40 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:40 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:40 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:40 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:40 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:40 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:40 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:42 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:42 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:42 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:42 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:42 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:42 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:42 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:42 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:42 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:42 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:42 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:42 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:42 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:05:42 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:05:42 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:42 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:44 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:44 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:44 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:44 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:44 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:44 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:45 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:05:45 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:05:46 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:46 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:47 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:05:47 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:05:47 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:47 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:47 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:47 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:05:47 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:05:47 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:05:47 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:47 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:47 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:47 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 BTC 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:50 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:50 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:50 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:50 - yfinance - ERROR - ['BTC-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:50 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:50 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:50 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:50 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 BTC-USDT 4H k线, limit=1000
2025-05-31 23:05:51 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:51 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=BTC-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:51 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:51 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/BTC-4H.csv, 行数 100
2025-05-31 23:05:51 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:51 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:51 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:51 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for BTC 4h
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:51 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ BTC: 数据不足
2025-05-31 23:05:51 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ BTC: 数据不足
2025-05-31 23:05:51 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:51 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 ETH 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:54 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:54 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:54 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:54 - yfinance - ERROR - ['ETH-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:54 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:54 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:54 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:54 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 ETH-USDT 4H k线, limit=1000
2025-05-31 23:05:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:55 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=ETH-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:05:55 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:55 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/ETH-4H.csv, 行数 100
2025-05-31 23:05:55 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:55 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:55 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:55 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:05:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:05:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:05:55 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ ETH: 数据不足
2025-05-31 23:05:55 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ ETH: 数据不足
2025-05-31 23:05:55 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:55 - backend.data_center.kline_data.yfinance_kline_fetcher - INFO - [YF] 开始下载 SOL 4h 数据 via yfinance, interval=60m
2025-05-31 23:05:58 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:58 - yfinance - ERROR - 
1 Failed download:
2025-05-31 23:05:58 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:58 - yfinance - ERROR - ['SOL-USD']: YFRateLimitError('Too Many Requests. Rate limited. Try after a while.')
2025-05-31 23:05:58 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:58 - backend.data_center.kline_data.yfinance_kline_fetcher - WARNING - [YF] 未获取到任何数据
2025-05-31 23:05:58 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:05:58 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 拉取 SOL-USDT 4H k线, limit=1000
2025-05-31 23:06:01 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:06:01 - httpx - INFO - HTTP Request: GET https://www.okx.com/api/v5/market/candles?instId=SOL-USDT&bar=4H "HTTP/2 200 OK"
2025-05-31 23:06:01 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:06:01 - backend.data_center.kline_data.okx_kline_fetcher - INFO - [OKX] 保存 CSV /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data/SOL-4H.csv, 行数 100
2025-05-31 23:06:01 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:06:01 - backend._utils - ERROR - 事务执行出错: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:06:01 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:06:01 - backend.data_center.kline_data.okx_kline_fetcher - ERROR - [OKX] 写入数据库失败: KlineRecord.bulk_upsert() takes 2 positional arguments but 3 were given
2025-05-31 23:06:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:06:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:06:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:06:01 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:06:01 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ SOL: 数据不足
2025-05-31 23:06:01 - backend.backtest_center.universal_backtest_engine - WARNING - ❌ SOL: 数据不足
2025-05-31 23:06:01 - backend.backtest_center.universal_backtest_engine - ERROR - 没有足够的可用数据
2025-05-31 23:06:01 - backend.backtest_center.universal_backtest_engine - ERROR - 没有足够的可用数据
2025-05-31 23:06:01 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:06:01 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:06:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 3 失败
2025-05-31 23:06:01 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 3 失败
2025-05-31 23:06:53 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:06:53 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:06:53 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:06:53 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:06:53 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:06:53 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:06:53 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:06:53 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:06:59 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:06:59 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:06:59 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:06:59 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:06:59 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:06:59 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:06:59 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:06:59 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:06:59 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:06:59 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:06:59 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:06:59 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:06:59 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:06:59 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:06:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:06:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] ('running',)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] ('running',)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:06:59 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:06:59 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.005962s ago] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.005962s ago] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:06:59.774398', 1)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:06:59.774398', 1)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.009084s ago] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.009084s ago] (1, 1, 0)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:06:59.776602', '2025-05-31 23:06:59.777457', 1)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:06:59.776602', '2025-05-31 23:06:59.777457', 1)
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:06:59 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:06:59 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:06:59 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:06:59 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:07:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:07:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:07:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:07:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:07:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:07:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:07:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:07:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:07:12 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:12 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:12 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:07:12 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:07:12 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:07:12 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:07:12 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:07:13 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:07:13 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:07:13 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:07:13 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:07:13 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:07:13 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:07:13 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:07:13 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:07:13 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:07:13 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:07:13 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00160s] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00160s] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:13 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:07:13 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [cached since 0.005956s ago] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [cached since 0.005956s ago] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:07:13.465560', 1)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:07:13.465560', 1)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [cached since 0.009356s ago] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [cached since 0.009356s ago] (1, 1, 0)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:07:13.467880', '2025-05-31 23:07:13.468905', 1)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:07:13.467880', '2025-05-31 23:07:13.468905', 1)
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:13 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:07:13 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:07:13 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:07:13 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:07:14 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:07:14 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:07:14 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:07:14 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:07:14 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:07:14 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:07:14 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:07:14 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:07:23 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:23 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:23 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:07:23 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:07:23 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:07:23 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:07:23 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:07:24 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:07:24 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:07:24 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:07:24 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:07:24 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:07:24 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:07:24 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:07:24 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:07:24 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:07:24 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:07:24 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00059s] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:07:24 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:07:24 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [cached since 0.005044s ago] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [cached since 0.005044s ago] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:07:24.538514', 1)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:07:24.538514', 1)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [cached since 0.008154s ago] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [cached since 0.008154s ago] (1, 1, 0)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 03:07:24.540694', '2025-05-31 23:07:24.541686', 1)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-06-01 03:07:24.540694', '2025-05-31 23:07:24.541686', 1)
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:07:24 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:07:24 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:07:24 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:07:24 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:07:31 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:07:31 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 4
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 4
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 4
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 4
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - BTC: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - BTC: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - ETH: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - ETH: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - SOL: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - WARNING - SOL: 数据不足 (51)
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:07:31 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:07:31 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 4 失败
2025-05-31 23:07:31 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 4 失败
2025-05-31 23:11:27 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:11:27 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:11:27 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:11:27 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:11:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:11:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:11:27 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:11:27 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:11:34 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:34 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:34 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:11:34 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:11:34 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:11:34 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:11:34 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:11:35 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:11:35 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:11:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:11:35 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:11:35 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:11:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:11:35 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:11:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:11:35 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:11:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:11:35 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00183s] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00183s] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:11:35 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.008144s ago] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.008144s ago] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:11:35.192183', 1)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:11:35.192183', 1)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.01242s ago] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [cached since 0.01242s ago] (1, 1, 0)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-06-01 03:11:35.195142', '2025-05-31 23:11:35.196477', 1)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-06-01 03:11:35.195142', '2025-05-31 23:11:35.196477', 1)
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:11:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:11:35 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:11:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:11:35 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:11:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:46 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:11:50 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:11:50 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00079s] ()
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00079s] ()
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.00706s ago] ()
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.00706s ago] ()
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:11:50 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:50 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:51 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:11:59 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:11:59 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:11:59 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:11:59 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:11:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:11:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:11:59 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:11:59 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:12:05 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:05 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:05 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:12:05 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:12:05 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:12:05 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:12:05 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:12:06 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:12:06 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:12:06 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:06 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:06 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:06 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:06 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:06 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:06 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] ('running',)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] ('running',)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:06 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:06 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.005736s ago] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.005736s ago] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:12:06.148419', 1)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:12:06.148419', 1)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.01012s ago] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [cached since 0.01012s ago] (1, 1, 0)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:12:06.151158', '2025-05-31 23:12:06.152855', 1)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:12:06.151158', '2025-05-31 23:12:06.152855', 1)
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:06 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:06 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:06 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:12:06 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:12:17 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:12:17 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:12:17 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:12:17 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:12:17 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:12:17 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:12:17 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:12:17 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:12:24 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:24 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:24 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:12:24 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:12:24 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:12:24 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:12:24 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:12:25 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:12:25 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:12:25 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:25 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:25 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:25 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:25 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:25 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:25 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:25 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:25 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] ('running',)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] ('running',)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:25 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:25 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [cached since 0.005473s ago] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [cached since 0.005473s ago] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('2025-05-31 23:12:25.238673', 1)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00035s] ('2025-05-31 23:12:25.238673', 1)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [cached since 0.009648s ago] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [cached since 0.009648s ago] (1, 1, 0)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:12:25.241851', '2025-05-31 23:12:25.242824', 1)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:12:25.241851', '2025-05-31 23:12:25.242824', 1)
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:25 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:25 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:25 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:12:25 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:12:43 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:12:43 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:12:43 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:12:43 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:12:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:12:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:12:43 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:12:43 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:12:49 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:49 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:12:49 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:12:49 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:12:49 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:12:49 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:12:50 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:12:50 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:12:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:12:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:12:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:12:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00042s] ('running',)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00064s] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00064s] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:12:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.005431s ago] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.005431s ago] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-05-31 23:12:50.307017', 1)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00021s] ('2025-05-31 23:12:50.307017', 1)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.009098s ago] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.009098s ago] (1, 1, 0)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:12:50.309399', '2025-05-31 23:12:50.310731', 1)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:12:50.309399', '2025-05-31 23:12:50.310731', 1)
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:12:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:12:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:12:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:03 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:03 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:03 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:03 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:08 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:08 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:08 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:13:08 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:13:08 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:13:08 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:13:08 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:13:09 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:13:09 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:13:09 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:09 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:09 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:09 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:09 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:09 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:09 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:09 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00045s] ('running',)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:09 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:09 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.005766s ago] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.005766s ago] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-05-31 23:13:09.366331', 1)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-05-31 23:13:09.366331', 1)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.009046s ago] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [cached since 0.009046s ago] (1, 1, 0)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:13:09.368655', '2025-05-31 23:13:09.369505', 1)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:13:09.368655', '2025-05-31 23:13:09.369505', 1)
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:09 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:09 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:09 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:09 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:25 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:25 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:25 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:25 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:25 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:25 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:25 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:25 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:32 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:13:32 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:13:32 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:13:32 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:13:32 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:13:32 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:13:32 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:13:32 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:32 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:32 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:32 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:32 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:32 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:32 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:32 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:32 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] ('running',)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00054s] ('running',)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00031s] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:32 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:32 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.004582s ago] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.004582s ago] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:13:32.638650', 1)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:13:32.638650', 1)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.008904s ago] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [cached since 0.008904s ago] (1, 1, 0)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:13:32.641525', '2025-05-31 23:13:32.643116', 1)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:13:32.641525', '2025-05-31 23:13:32.643116', 1)
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:32 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:32 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:32 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:32 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:40 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:40 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:13:40 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:40 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:13:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:13:40 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:40 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:13:47 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:13:47 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:13:47 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:13:47 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:13:47 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:13:47 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:13:47 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:13:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:13:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:13:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:13:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] ('running',)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00049s] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:13:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.004868s ago] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.004868s ago] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:13:47.967453', 1)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:13:47.967453', 1)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.008181s ago] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.008181s ago] (1, 1, 0)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:13:47.969629', '2025-05-31 23:13:47.970723', 1)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:13:47.969629', '2025-05-31 23:13:47.970723', 1)
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:13:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:13:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:13:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:19 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:15:19 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 5
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 5
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 5
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 5
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 BTC 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 BTC 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 ETH 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 ETH 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 SOL 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 SOL 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:15:19 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:15:19 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 5 失败
2025-05-31 23:15:19 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 5 失败
2025-05-31 23:15:20 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:15:20 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:15:20 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:15:20 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:15:20 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:15:20 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:15:20 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:15:20 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:15:27 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:15:27 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:15:27 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:15:27 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:15:27 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:15:27 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:15:27 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:15:27 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:15:27 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:15:27 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:15:27 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:15:27 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:15:27 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:15:27 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:15:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:15:27 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00047s] ('running',)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:15:27 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:15:27 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.005565s ago] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.005565s ago] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:15:27.728562', 1)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:15:27.728562', 1)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.009123s ago] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [cached since 0.009123s ago] (1, 1, 0)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:15:27.730932', '2025-05-31 23:15:27.732203', 1)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:15:27.730932', '2025-05-31 23:15:27.732203', 1)
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:15:27 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:15:27 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:15:27 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:15:27 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:15:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:15:55 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:43 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:43 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:43 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:43 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 收到回测请求
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:54 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:16:54 - backend._utils - INFO - 当前目录: /Users/rain/PycharmProjects/uchu_trade/backend
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 6
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 创建回测记录: 6
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 6
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - INFO - 开始执行回测 6
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 🚀 开始增强回测流程
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 📊 将测试 3 个交易对: ['BTC', 'ETH', 'SOL']
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - ⚙️ 回测配置: dbb_entry_long_strategy/dbb_exit_long_strategy/sma_perfect_order_filter_strategy
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - INFO - 🔑 配置键: dbb_entry_long_strategy_dbb_exit_long_strategy_sma_perfect_order_filter_strategy_BTC_ETH_SOL_4h_3m_cash100000.0_risk2.0_fee0.001
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 🚀 开始回测
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records from DB for BTC 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - BTC 4h final rows: 100, range: 2025-05-14 16:00:00 - 2025-05-31 04:00:00
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ BTC: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for ETH 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - ETH 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ ETH: 100 条数据可用
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - Loaded 100 records for SOL 4h
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - SOL 4h final rows: 100, range: 2025-05-15 00:00:00 - 2025-05-31 12:00:00
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ✅ SOL: 100 条数据可用
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 BTC
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - BTC: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 BTC 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 BTC 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 ETH
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - ETH: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 ETH 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 ETH 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - 开始回测 SOL
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - INFO - SOL: rows after clean 100
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 SOL 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 处理 SOL 时出错: 'UniversalBacktestEngine' object has no attribute '_apply_entry_strategy'
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:16:54 - backend.backtest_center.universal_backtest_engine - ERROR - 没有成功的回测结果
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:16:54 - backend.backtest_center.enhanced_backtest_runner - ERROR - ❌ 回测失败
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 6 失败
2025-05-31 23:16:54 - backend.controller_center.backtest.enhanced_backtest_controller - ERROR - 回测 6 失败
2025-05-31 23:18:37 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:18:37 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:18:37 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:18:37 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:18:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:18:37 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:18:37 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:18:37 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:18:42 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:42 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:42 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:18:42 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:18:42 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:18:42 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:18:42 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:18:43 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:18:43 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:18:43 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:18:43 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:18:43 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:18:43 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:18:43 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:18:43 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:18:43 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:18:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:18:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('running',)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00039s] ('running',)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00030s] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:18:43 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:18:43 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [cached since 0.005997s ago] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [cached since 0.005997s ago] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:18:43.188102', 1)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:18:43.188102', 1)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [cached since 0.009249s ago] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [cached since 0.009249s ago] (1, 1, 0)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:18:43.190312', '2025-05-31 23:18:43.191362', 1)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:18:43.190312', '2025-05-31 23:18:43.191362', 1)
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:18:43 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:18:43 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:18:43 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:18:43 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:19:47 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:19:47 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:19:47 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:19:47 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:19:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:19:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:19:47 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:19:47 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:19:52 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:52 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:52 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:19:52 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:19:52 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:19:52 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:19:52 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:19:53 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:19:53 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:19:53 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:19:53 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:19:53 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:19:53 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:19:53 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:19:53 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:19:53 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:19:53 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:19:53 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] ('running',)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00041s] ('running',)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00055s] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:19:53 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:19:53 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [cached since 0.005466s ago] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [cached since 0.005466s ago] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:19:53.200454', 1)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:19:53.200454', 1)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [cached since 0.008975s ago] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [cached since 0.008975s ago] (1, 1, 0)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:19:53.202604', '2025-05-31 23:19:53.203909', 1)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:19:53.202604', '2025-05-31 23:19:53.203909', 1)
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:19:53 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:19:53 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:19:53 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:19:53 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:21:41 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:21:41 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:21:41 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:21:41 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:21:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:21:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:21:41 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:21:41 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:21:47 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:21:47 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:21:47 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:21:47 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:21:47 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:21:47 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:21:47 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:21:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:21:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:21:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:21:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:21:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:21:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:21:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:21:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:21:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00091s] ('running',)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00091s] ('running',)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:21:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:21:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.005564s ago] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.005564s ago] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:21:47.903785', 1)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:21:47.903785', 1)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.008899s ago] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.008899s ago] (1, 1, 0)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:21:47.906044', '2025-05-31 23:21:47.907021', 1)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:21:47.906044', '2025-05-31 23:21:47.907021', 1)
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:21:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:21:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:21:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:21:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:24:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00179s] ()
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - [generated in 0.00179s] ()
2025-05-31 23:24:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:57 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.02665s ago] ()
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - [cached since 0.02665s ago] ()
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:24:57 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:24:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:24:58 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:36:50 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:36:50 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:36:50 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:36:50 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:36:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:36:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:36:50 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:36:50 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:36:58 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:58 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:58 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:36:58 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:36:58 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:36:58 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:36:58 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:36:59 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:36:59 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:36:59 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:36:59 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:36:59 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:36:59 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:36:59 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:36:59 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:36:59 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:36:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:36:59 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] ('running',)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] ('running',)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00058s] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:36:59 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:36:59 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.005828s ago] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.005828s ago] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:36:59.195235', 1)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:36:59.195235', 1)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.009637s ago] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [cached since 0.009637s ago] (1, 1, 0)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:36:59.197470', '2025-05-31 23:36:59.198955', 1)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:36:59.197470', '2025-05-31 23:36:59.198955', 1)
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:36:59 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:36:59 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:36:59 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:36:59 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:37:13 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:37:13 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:37:13 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:37:13 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:37:13 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:37:13 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:37:13 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:37:13 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:37:19 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:37:19 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:37:19 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:37:19 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:37:19 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:37:19 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:37:19 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:37:19 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:37:19 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:37:19 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:37:19 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:37:19 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:37:19 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:37:19 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:37:19 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:37:19 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00081s] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00081s] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:19 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:37:19 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [cached since 0.005908s ago] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [cached since 0.005908s ago] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 23:37:19.774051', 1)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 23:37:19.774051', 1)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [cached since 0.009537s ago] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [cached since 0.009537s ago] (1, 1, 0)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:37:19.776493', '2025-05-31 23:37:19.777647', 1)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-06-01 03:37:19.776493', '2025-05-31 23:37:19.777647', 1)
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:19 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:37:19 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:37:19 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:37:19 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:37:43 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:37:43 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:37:43 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:37:43 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:37:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:37:43 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:37:43 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:37:43 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:37:48 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:48 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:48 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:37:48 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:37:48 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:37:48 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:37:48 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:37:49 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:37:49 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:37:49 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:37:49 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:37:49 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:37:49 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:37:49 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:37:49 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:37:49 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:37:49 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:37:49 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] ('running',)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00048s] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:37:49 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:37:49 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [cached since 0.006345s ago] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [cached since 0.006345s ago] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 23:37:49.747974', 1)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00016s] ('2025-05-31 23:37:49.747974', 1)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [cached since 0.009736s ago] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [cached since 0.009736s ago] (1, 1, 0)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] ('2025-06-01 03:37:49.750357', '2025-05-31 23:37:49.751325', 1)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - [generated in 0.00027s] ('2025-06-01 03:37:49.750357', '2025-05-31 23:37:49.751325', 1)
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:37:49 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:37:49 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:37:49 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:37:49 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:43:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00797s] ()
2025-05-31 23:43:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00797s] ()
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:43:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:43:22 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.0406s ago] ()
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.0406s ago] ()
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:43:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:44:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:44:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:44:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:44:54 - backend.data_center.kline_data.enhanced_kline_manager - INFO - EnhancedKlineManager initialized with data_dir: /Users/rain/PycharmProjects/uchu_trade/backend/data_center/kline_data
2025-05-31 23:49:41 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:49:41 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:49:41 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:49:41 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:49:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:49:41 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:49:41 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:49:41 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:49:49 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:49 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:49 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:49:49 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:49:49 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:49:49 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:49:49 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:49:50 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:49:50 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:49:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:49:50 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:49:50 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:49:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:49:50 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:49:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:49:50 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:49:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:49:50 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00038s] ('running',)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00077s] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00077s] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:49:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:49:50 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.007073s ago] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.007073s ago] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00296s] ('2025-05-31 23:49:50.957404', 1)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00296s] ('2025-05-31 23:49:50.957404', 1)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.02368s ago] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [cached since 0.02368s ago] (1, 1, 0)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00129s] ('2025-06-01 03:49:50.972568', '2025-05-31 23:49:50.974323', 1)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - [generated in 0.00129s] ('2025-06-01 03:49:50.972568', '2025-05-31 23:49:50.974323', 1)
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:49:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:49:50 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:49:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:49:50 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:50:01 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:50:01 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:50:01 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:50:01 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:50:01 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:50:01 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:50:01 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:50:01 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:50:06 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:06 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:06 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:50:06 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:50:06 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:50:06 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:50:06 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:50:07 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:50:07 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:50:07 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:50:07 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:50:07 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:50:07 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:50:07 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:50:07 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:50:07 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:50:07 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:50:07 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] ('running',)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] ('running',)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00043s] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:50:07 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:50:07 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [cached since 0.00484s ago] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [cached since 0.00484s ago] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:50:07.136611', 1)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:50:07.136611', 1)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [cached since 0.008088s ago] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [cached since 0.008088s ago] (1, 1, 0)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:50:07.138830', '2025-05-31 23:50:07.139748', 1)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-06-01 03:50:07.138830', '2025-05-31 23:50:07.139748', 1)
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:50:07 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:50:07 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:50:07 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:50:07 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:51:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:51:06 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:51:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:51:06 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:51:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:51:06 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:51:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:51:06 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:51:13 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:13 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:13 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:51:13 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:51:13 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:51:13 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:51:13 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:51:13 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:51:13 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:51:14 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:51:14 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:51:14 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:51:14 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:51:14 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:51:14 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:51:14 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:51:14 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:51:14 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00068s] ('running',)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00068s] ('running',)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00074s] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:14 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:51:14 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [cached since 0.007445s ago] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [cached since 0.007445s ago] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:51:14.086656', 1)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00018s] ('2025-05-31 23:51:14.086656', 1)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [cached since 0.01132s ago] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [cached since 0.01132s ago] (1, 1, 0)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 03:51:14.089183', '2025-05-31 23:51:14.090531', 1)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-06-01 03:51:14.089183', '2025-05-31 23:51:14.090531', 1)
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:14 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:51:14 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:51:14 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:51:14 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:51:39 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:51:39 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:51:39 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:51:39 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:51:39 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:51:39 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:51:39 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:51:39 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:51:44 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:44 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:44 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:51:44 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:51:44 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:51:44 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:51:44 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:51:45 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:51:45 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:51:45 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:51:45 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:51:45 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:51:45 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:51:45 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:51:45 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:51:45 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:51:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:51:45 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00050s] ('running',)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00051s] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:51:45 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:51:45 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.005606s ago] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.005606s ago] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:51:45.380214', 1)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00015s] ('2025-05-31 23:51:45.380214', 1)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.00936s ago] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [cached since 0.00936s ago] (1, 1, 0)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:51:45.382945', '2025-05-31 23:51:45.383949', 1)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:51:45.382945', '2025-05-31 23:51:45.383949', 1)
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:51:45 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:51:45 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:51:45 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:51:45 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:55:40 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:55:40 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:55:40 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:55:40 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:55:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:55:40 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:55:40 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:55:40 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:55:46 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:46 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:46 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:55:46 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:55:46 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:55:46 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:55:46 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:55:47 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:55:47 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:55:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:55:47 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:55:47 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:55:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:55:47 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:55:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:55:47 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:55:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:55:47 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00082s] ('running',)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00082s] ('running',)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00033s] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:55:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:55:47 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.0111s ago] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.0111s ago] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:55:47.568827', 1)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:55:47.568827', 1)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.0158s ago] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [cached since 0.0158s ago] (1, 1, 0)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:55:47.571874', '2025-05-31 23:55:47.573353', 1)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - [generated in 0.00022s] ('2025-06-01 03:55:47.571874', '2025-05-31 23:55:47.573353', 1)
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:55:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:55:47 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:55:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:55:47 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:56:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:56:15 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:56:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:56:15 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:56:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:56:15 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:56:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:56:15 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:56:21 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:21 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:21 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:56:21 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:56:21 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:56:21 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:56:21 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:56:22 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:56:22 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:56:22 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:56:22 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:56:22 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:56:22 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:56:22 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:56:22 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:56:22 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:56:22 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:56:22 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] ('running',)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00046s] ('running',)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00052s] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:56:22 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:56:22 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.006049s ago] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.006049s ago] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:56:22.166375', 1)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00019s] ('2025-05-31 23:56:22.166375', 1)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.009982s ago] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [cached since 0.009982s ago] (1, 1, 0)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:56:22.168698', '2025-05-31 23:56:22.170008', 1)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-06-01 03:56:22.168698', '2025-05-31 23:56:22.170008', 1)
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:56:22 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:56:22 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:56:22 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:56:22 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:59:19 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:59:19 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:59:19 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:59:19 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:59:19 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:59:19 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:59:19 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:59:19 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:59:26 - __mp_main__ - INFO - 开始创建数据库表...
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - __mp_main__ - INFO - 数据库表创建完成
2025-05-31 23:59:26 - api_center.okx_api.okx_main - INFO - 初始化OKXAPIWrapper - 环境: market
2025-05-31 23:59:26 - api_center.okx_api.okx_main - INFO - 配置加载完成
2025-05-31 23:59:26 - api_center.okx_api.okx_main - INFO - API配置 - 环境: market, 模拟交易: 0
2025-05-31 23:59:26 - backend.api_center.okx_api.account_api - INFO - 初始化AccountAPIWrapper - flag: 0
2025-05-31 23:59:26 - api_center.okx_api.okx_main - INFO - 所有API组件初始化完成
2025-05-31 23:59:26 - api_center.okx_api.okx_main - INFO - market OKX API 初始化完成
2025-05-31 23:59:26 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:59:26 - main_controller - INFO - 开始创建数据库表...
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("spot_algo_order_record")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("upload_file")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_job")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("system_prompt")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_instance")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("strategy_execution_records")
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:59:26 - main_controller - INFO - 数据库表创建完成
2025-05-31 23:59:26 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:59:26 - main_controller - INFO - 启动策略调度器...
2025-05-31 23:59:26 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:59:26 - apscheduler.scheduler - INFO - Scheduler started
2025-05-31 23:59:26 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:59:26 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已启动
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.status = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00044s] ('running',)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00040s] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-05-31 23:59:26 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:59:26 - apscheduler.scheduler - INFO - Added job "测试策略 - 4h" to job store "default"
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [cached since 0.005079s ago] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [cached since 0.005079s ago] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:59:26.955622', 1)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00017s] ('2025-05-31 23:59:26.955622', 1)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - SELECT strategy_instance.id AS strategy_instance_id, strategy_instance.strategy_id AS strategy_instance_strategy_id, strategy_instance.strategy_name AS strategy_instance_strategy_name, strategy_instance.strategy_type AS strategy_instance_strategy_type, strategy_instance.strategy_params AS strategy_instance_strategy_params, strategy_instance.status AS strategy_instance_status, strategy_instance.schedule_frequency AS strategy_instance_schedule_frequency, strategy_instance.next_execution_time AS strategy_instance_next_execution_time, strategy_instance.last_execution_time AS strategy_instance_last_execution_time, strategy_instance.symbols AS strategy_instance_symbols, strategy_instance.entry_per_trans AS strategy_instance_entry_per_trans, strategy_instance.loss_per_trans AS strategy_instance_loss_per_trans, strategy_instance.commission AS strategy_instance_commission, strategy_instance.total_executions AS strategy_instance_total_executions, strategy_instance.total_trades AS strategy_instance_total_trades, strategy_instance.total_profit AS strategy_instance_total_profit, strategy_instance.win_rate AS strategy_instance_win_rate, strategy_instance.created_at AS strategy_instance_created_at, strategy_instance.updated_at AS strategy_instance_updated_at 
FROM strategy_instance 
WHERE strategy_instance.id = ?
 LIMIT ? OFFSET ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [cached since 0.008173s ago] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [cached since 0.008173s ago] (1, 1, 0)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - UPDATE strategy_instance SET next_execution_time=?, updated_at=? WHERE strategy_instance.id = ?
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:59:26.957826', '2025-05-31 23:59:26.958659', 1)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - [generated in 0.00014s] ('2025-06-01 03:59:26.957826', '2025-05-31 23:59:26.958659', 1)
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-05-31 23:59:26 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:59:26 - backend.schedule_center.strategy_scheduler - INFO - 策略实例 1 已添加到调度器
2025-05-31 23:59:26 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:59:26 - main_controller - INFO - 策略调度器启动完成
2025-05-31 23:59:55 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:59:55 - main_controller - INFO - 停止策略调度器...
2025-05-31 23:59:55 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:59:55 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-05-31 23:59:55 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:59:55 - backend.schedule_center.strategy_scheduler - INFO - 策略调度器已停止
2025-05-31 23:59:55 - main_controller - INFO - 策略调度器已停止
2025-05-31 23:59:55 - main_controller - INFO - 策略调度器已停止
